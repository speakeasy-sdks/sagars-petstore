// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PetStatus - pet status in the store
type PetStatus string

const (
	PetStatusAvailable PetStatus = "available"
	PetStatusPending   PetStatus = "pending"
	PetStatusSold      PetStatus = "sold"
)

func (e PetStatus) ToPointer() *PetStatus {
	return &e
}

func (e *PetStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "pending":
		fallthrough
	case "sold":
		*e = PetStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PetStatus: %v", v)
	}
}

// Pet - Create a new pet in the store
type Pet struct {
	Category  *Category `json:"category,omitempty" form:"name=category,json"`
	ID        *int64    `json:"id,omitempty" form:"name=id"`
	Name      string    `json:"name" form:"name=name"`
	PhotoUrls []string  `json:"photoUrls" form:"name=photoUrls"`
	// pet status in the store
	Status *PetStatus `json:"status,omitempty" form:"name=status"`
	Tags   []Tag      `json:"tags,omitempty" form:"name=tags,json"`
}
